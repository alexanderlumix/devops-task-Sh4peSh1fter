# YAML Anchors for reusable configuration
x-mongo-common: &mongo-common
  build: .
  restart: unless-stopped
  deploy: &mongo-resources
    resources:
      limits:
        cpus: '1.0'
        memory: 1G
      reservations:
        cpus: '0.25'
        memory: 256M
  logging: &mongo-logging
    driver: "json-file"
    options:
      max-size: "50m"
      max-file: "5"
  volumes: &mongo-volumes
    - ./mongo-keyfile:/etc/mongo-keyfile:ro
  # Parameterized health check using environment variables
  healthcheck: &mongo-healthcheck
    test: ["CMD", "/usr/local/bin/healthcheck.sh"]
    interval: 5s
    timeout: 15s
    start_period: 15s
    retries: 10

# Environment variables for ports
x-environment: &default-env
  MONGO_REPLICA_SET: rs0
  MONGO_BASE_PORT: 27030

services:
  haproxy:
    image: haproxy:2.9
    container_name: haproxy-lb
    restart: unless-stopped
    labels:
      - "app=mongodb-cluster"
      - "component=load-balancer"
      - "version=2.9"
    ports:
      - "${HAPROXY_PORT:-27034}:27034"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - mongo-0
      - mongo-1
      - mongo-2

  mongo-0:
    <<: *mongo-common
    container_name: mongo-0
    environment:
      <<: *default-env
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_0_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_0_PASSWORD}
      MONGO_PORT: ${MONGO_0_PORT:-27030}
      NODE_ID: 0
    ports:
      - "${MONGO_0_PORT:-27030}:${MONGO_0_PORT:-27030}"
    volumes:
      - mongo-0:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
    labels:
      - "app=mongodb-cluster"
      - "component=database"
      - "role=replica-member"
      - "node=primary-candidate"

  mongo-1:
    <<: *mongo-common
    container_name: mongo-1
    environment:
      <<: *default-env
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_1_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_1_PASSWORD}
      MONGO_PORT: ${MONGO_1_PORT:-27031}
      NODE_ID: 1
    ports:
      - "${MONGO_1_PORT:-27031}:${MONGO_1_PORT:-27031}"
    volumes:
      - mongo-1:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
    labels:
      - "app=mongodb-cluster"
      - "component=database"
      - "role=replica-member"
      - "node=secondary"


  mongo-2:
    <<: *mongo-common
    container_name: mongo-2
    environment:
      <<: *default-env
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_2_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_2_PASSWORD}
      MONGO_PORT: ${MONGO_2_PORT:-27032}
      NODE_ID: 2
    ports:
      - "${MONGO_2_PORT:-27032}:${MONGO_2_PORT:-27032}"
    volumes:
      - mongo-2:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
    labels:
      - "app=mongodb-cluster"
      - "component=database"
      - "role=replica-member"
      - "node=secondary"

networks:
  default:
    name: mongodb_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mongo-0:
    driver: local
  mongo-1:
    driver: local
  mongo-2:
    driver: local
