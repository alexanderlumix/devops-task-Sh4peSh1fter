services:
  haproxy:
    image: haproxy:2.9
    container_name: haproxy-lb
    restart: unless-stopped
    ports: # exposing the haproxy port to the host
      - "27034:27034"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - mongo-0
      - mongo-1
      - mongo-2

  mongo-0:
    image: mongo:7.0.16
    container_name: mongo-0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo-0
      MONGO_INITDB_ROOT_PASSWORD: mongo-0
    ports: # exposing the mongo-0 port to the host
      - "27030:27030"
    command: ["mongod", "--port", "27030", "--bind_ip_all", "--replSet", "rs0", "--keyFile", "/etc/mongo-keyfile"] # using the keyfile for authentication
    healthcheck:
      test: echo "db.runCommand('ping')" | mongosh --port 27030 --quiet # changed the healthcheck because the previous one was not working
      interval: 5s
      timeout: 15s
      start_period: 15s
      retries: 10
    volumes:
      - mongo-0:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile

  mongo-1:
    image: mongo:7.0.16
    container_name: mongo-1
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo-1
      MONGO_INITDB_ROOT_PASSWORD: mongo-1
    ports: # exposing the mongo-1 port to the host
      - "27031:27031"
    command: ["mongod", "--port", "27031", "--bind_ip_all", "--replSet", "rs0", "--keyFile", "/etc/mongo-keyfile"] # using the keyfile for authentication
    healthcheck:
      test: echo "db.runCommand('ping')" | mongosh --port 27031 --quiet # changed the healthcheck because the previous one was not working
      interval: 5s
      timeout: 15s
      start_period: 15s
      retries: 10
    volumes:
      - mongo-1:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile

  mongo-2:
    image: mongo:7.0.16
    container_name: mongo-2
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo-2
      MONGO_INITDB_ROOT_PASSWORD: mongo-2
    ports: # exposing the mongo-2 port to the host
      - "27032:27032"
    command: ["mongod", "--port", "27032", "--bind_ip_all", "--replSet", "rs0", "--keyFile", "/etc/mongo-keyfile"] # using the keyfile for authentication
    healthcheck:
      test: echo "db.runCommand('ping')" | mongosh --port 27032 --quiet # changed the healthcheck because the previous one was not working
      interval: 5s
      timeout: 15s
      start_period: 15s
      retries: 10
    volumes:
      - mongo-2:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile

volumes:
  mongo-0: {}
  mongo-1: {}
  mongo-2: {}
